/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cz.muni.fi.pv168.bankgui;

import cz.fi.muni.pv168.bank.Account;
import cz.fi.muni.pv168.bank.AccountManager;
import cz.fi.muni.pv168.bank.AccountManagerImpl;
import cz.fi.muni.pv168.bank.BankManager;
import cz.fi.muni.pv168.bank.BankManagerImpl;
import cz.fi.muni.pv168.bank.Person;
import cz.fi.muni.pv168.bank.PersonManager;
import cz.fi.muni.pv168.bank.PersonManagerImpl;
import java.io.IOException;
import java.io.InputStream;
import java.util.List;
import java.util.Locale;
import java.util.Properties;
import java.util.ResourceBundle;
import javax.annotation.Resource;
import javax.sql.DataSource;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import org.slf4j.LoggerFactory;
import org.springframework.core.io.ClassPathResource;
import org.springframework.jdbc.datasource.init.DatabasePopulatorUtils;
import org.springframework.jdbc.datasource.init.ResourceDatabasePopulator;

/**
 *
 * @author Katarina Matusova
 */
public class PeopleFrame extends javax.swing.JFrame {

    @Resource(name = "jdbc/MojeDB")
    private PersonManager personManager;
    private BankManager bankManager;
    private AccountManager accountManager;
    private JFrame parent;
    private DataSource ds;
    private final ResourceBundle bundle = ResourceBundle.getBundle("language", getLocale());
    private final static org.slf4j.Logger log = LoggerFactory.getLogger(PeopleFrame.class);

    /**
     * Creates new form PeopleFrame
     */
    public PeopleFrame() throws IOException {

        setComponents(createMemoryDatabasee());
        setTitle(bundle.getString("clients"));
        this.parent = new JFrame();
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        selectClientButton = new javax.swing.JButton();
        deleteClientButton = new javax.swing.JButton();
        addClientButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        peopleTable = new javax.swing.JTable();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(bundle.getString("clients"));

        selectClientButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/selectContact.png"))); // NOI18N
        selectClientButton.setText(bundle.getString("selectClient")
        );
        selectClientButton.setMaximumSize(new java.awt.Dimension(165, 41));
        selectClientButton.setMinimumSize(new java.awt.Dimension(165, 41));
        selectClientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectClientButtonActionPerformed(evt);
            }
        });

        deleteClientButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/deleteContact.png"))); // NOI18N
        deleteClientButton.setText(bundle.getString("deleteClient")
        );
        deleteClientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteClientButtonActionPerformed(evt);
            }
        });

        addClientButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/addContact.png"))); // NOI18N
        addClientButton.setText(bundle.getString("addClient"));
        addClientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addClientButtonActionPerformed(evt);
            }
        });

        peopleTable.setModel(new PersonTableModel(personManager));
        jScrollPane1.setViewportView(peopleTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addClientButton, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteClientButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selectClientButton, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addClientButton, deleteClientButton, selectClientButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteClientButton)
                    .addComponent(addClientButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectClientButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addClientButton, deleteClientButton, selectClientButton});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectClientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectClientButtonActionPerformed
        int column = 0;
        try {
            int row = peopleTable.getSelectedRow();
            Long id = (Long) peopleTable.getModel().getValueAt(row, column);
            new AccountsFrame(personManager.getPerson(id), this, bankManager, accountManager).setVisible(true);
        } catch (Exception e) {
            log.error("Person not chosen");
            JOptionPane.showMessageDialog(rootPane, "You have to choose one person.");
        }

    }//GEN-LAST:event_selectClientButtonActionPerformed

    private void deleteClientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteClientButtonActionPerformed
        int column = 0;
        try {
            int row = peopleTable.getSelectedRow();
            Long id = (Long) peopleTable.getModel().getValueAt(row, column);

            Person person = personManager.getPerson(id);
            List<Account> accs = bankManager.findAllAccountsByPerson(person);
            for (Account acc : accs) {
                bankManager.deleteAccount(acc, person);
            }
            PersonTableModel model = (PersonTableModel) peopleTable.getModel();

            model.removeRow(peopleTable.convertRowIndexToModel(row));
        } catch (Exception e) {
             log.error("Person not chosen");
            JOptionPane.showMessageDialog(rootPane, "You have to choose one person.");
        }
        PersonTableModel model = (PersonTableModel) peopleTable.getModel();
        model.fireTableDataChanged();


    }//GEN-LAST:event_deleteClientButtonActionPerformed

    private void addClientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addClientButtonActionPerformed
        new AddClientFrame(personManager, this, bundle).setVisible(true);
    }//GEN-LAST:event_addClientButtonActionPerformed

    /**
     * public static DataSource createMemoryDatabase() { BasicDataSource bds =
     * new BasicDataSource(); //set JDBC driver and URL
     * bds.setDriverClassName("org.apache.derby.jdbc.ClientDriver");
     * bds.setUrl("jdbc:derby://localhost:1527/bankDb"); //populate db with
     * tables and data return bds;
    }
     */
    private DataSource createMemoryDatabasee() throws IOException {
        Properties p = new Properties();
        InputStream inputStream = Main.class.getResourceAsStream("/jdbc.properties");
        try {
            p.load(inputStream);
        } catch (IOException e) {
            e.printStackTrace();
        }
        org.apache.commons.dbcp2.BasicDataSource bds = new org.apache.commons.dbcp2.BasicDataSource();
        bds.setDriverClassName(p.getProperty("jdbc.driver"));
        bds.setUrl(p.getProperty("jdbc.url"));
        DatabasePopulatorUtils.execute(new ResourceDatabasePopulator(
                new ClassPathResource("my-schema.sql")), bds);
        return bds;
    }

    private void setComponents(DataSource dataSource) {
        this.bankManager = new BankManagerImpl();
        this.bankManager.setDataSource(dataSource);
        this.personManager = new PersonManagerImpl(dataSource);
        this.accountManager = new AccountManagerImpl(dataSource);

    }

    public JTable getTable() {
        return peopleTable;
    }

    @Override
    public Locale getLocale() {
        return new Locale(System.getProperty("user.language"),
                System.getProperty("user.country"));
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addClientButton;
    private javax.swing.JButton deleteClientButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable peopleTable;
    private javax.swing.JButton selectClientButton;
    // End of variables declaration//GEN-END:variables
}
